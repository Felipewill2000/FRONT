[1mdiff --git a/.angular/cache/18.0.5/angular-webpack/d60d755b7d05577c07e2fdc26ed3af5e6805d920/0.pack b/.angular/cache/18.0.5/angular-webpack/d60d755b7d05577c07e2fdc26ed3af5e6805d920/0.pack[m
[1mdeleted file mode 100644[m
[1mindex 09b62d1..0000000[m
Binary files a/.angular/cache/18.0.5/angular-webpack/d60d755b7d05577c07e2fdc26ed3af5e6805d920/0.pack and /dev/null differ
[1mdiff --git a/.angular/cache/18.0.5/angular-webpack/d60d755b7d05577c07e2fdc26ed3af5e6805d920/1.pack b/.angular/cache/18.0.5/angular-webpack/d60d755b7d05577c07e2fdc26ed3af5e6805d920/1.pack[m
[1mdeleted file mode 100644[m
[1mindex 0e2a489..0000000[m
Binary files a/.angular/cache/18.0.5/angular-webpack/d60d755b7d05577c07e2fdc26ed3af5e6805d920/1.pack and /dev/null differ
[1mdiff --git a/.angular/cache/18.0.5/angular-webpack/d60d755b7d05577c07e2fdc26ed3af5e6805d920/index.pack b/.angular/cache/18.0.5/angular-webpack/d60d755b7d05577c07e2fdc26ed3af5e6805d920/index.pack[m
[1mdeleted file mode 100644[m
[1mindex 1cd6b0b..0000000[m
Binary files a/.angular/cache/18.0.5/angular-webpack/d60d755b7d05577c07e2fdc26ed3af5e6805d920/index.pack and /dev/null differ
[1mdiff --git a/.angular/cache/18.0.5/babel-webpack/002aad2889b77fd8853c830bc24691774c122a3c546627138e2a71a497d55c6e.json b/.angular/cache/18.0.5/babel-webpack/002aad2889b77fd8853c830bc24691774c122a3c546627138e2a71a497d55c6e.json[m
[1mnew file mode 100644[m
[1mindex 0000000..14dbafc[m
[1m--- /dev/null[m
[1m+++ b/.angular/cache/18.0.5/babel-webpack/002aad2889b77fd8853c830bc24691774c122a3c546627138e2a71a497d55c6e.json[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m{"ast":null,"code":"import { isString } from '../core/util.js';\nexport function parseXML(svg) {\n  if (isString(svg)) {\n    var parser = new DOMParser();\n    svg = parser.parseFromString(svg, 'text/xml');\n  }\n  var svgNode = svg;\n  if (svgNode.nodeType === 9) {\n    svgNode = svgNode.firstChild;\n  }\n  while (svgNode.nodeName.toLowerCase() !== 'svg' || svgNode.nodeType !== 1) {\n    svgNode = svgNode.nextSibling;\n  }\n  return svgNode;\n}","map":{"version":3,"names":["isString","parseXML","svg","parser","DOMParser","parseFromString","svgNode","nodeType","firstChild","nodeName","toLowerCase","nextSibling"],"sources":["C:/Users/Socius/Desktop/Ultimo desafio/front/node_modules/zrender/lib/tool/parseXML.js"],"sourcesContent":["import { isString } from '../core/util.js';\nexport function parseXML(svg) {\n    if (isString(svg)) {\n        var parser = new DOMParser();\n        svg = parser.parseFromString(svg, 'text/xml');\n    }\n    var svgNode = svg;\n    if (svgNode.nodeType === 9) {\n        svgNode = svgNode.firstChild;\n    }\n    while (svgNode.nodeName.toLowerCase() !== 'svg' || svgNode.nodeType !== 1) {\n        svgNode = svgNode.nextSibling;\n    }\n    return svgNode;\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,iBAAiB;AAC1C,OAAO,SAASC,QAAQA,CAACC,GAAG,EAAE;EAC1B,IAAIF,QAAQ,CAACE,GAAG,CAAC,EAAE;IACf,IAAIC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;IAC5BF,GAAG,GAAGC,MAAM,CAACE,eAAe,CAACH,GAAG,EAAE,UAAU,CAAC;EACjD;EACA,IAAII,OAAO,GAAGJ,GAAG;EACjB,IAAII,OAAO,CAACC,QAAQ,KAAK,CAAC,EAAE;IACxBD,OAAO,GAAGA,OAAO,CAACE,UAAU;EAChC;EACA,OAAOF,OAAO,CAACG,QAAQ,CAACC,WAAW,CAAC,CAAC,KAAK,KAAK,IAAIJ,OAAO,CAACC,QAAQ,KAAK,CAAC,EAAE;IACvED,OAAO,GAAGA,OAAO,CAACK,WAAW;EACjC;EACA,OAAOL,OAAO;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}[m
\ No newline at end of file[m
[1mdiff --git a/.angular/cache/18.0.5/babel-webpack/0033f6fa5594e867ac74a5f5ad462854cb1a6c5a4547afce1c331e996b786c49.json b/.angular/cache/18.0.5/babel-webpack/0033f6fa5594e867ac74a5f5ad462854cb1a6c5a4547afce1c331e996b786c49.json[m
[1mnew file mode 100644[m
[1mindex 0000000..5446868[m
[1m--- /dev/null[m
[1m+++ b/.angular/cache/18.0.5/babel-webpack/0033f6fa5594e867ac74a5f5ad462854cb1a6c5a4547afce1c331e996b786c49.json[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m{"ast":null,"code":"import { BehaviorSubject, of, Subject } from 'rxjs';\nimport { debounceTime, delay, switchMap, tap } from 'rxjs/operators';\nimport { GridJs } from 'src/app/core/data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst compare = (v1, v2) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\nfunction matches(country, term, pipe) {\n  return country.id.toLowerCase().includes(term.toLowerCase()) || country.name.toLowerCase().includes(term.toLowerCase()) || country.email.toLowerCase().includes(term.toLowerCase()) || country.position.toLowerCase().includes(term.toLowerCase()) || country.company.toLowerCase().includes(term.toLowerCase()) || country.country.toLowerCase().includes(term.toLowerCase());\n}\nexport class GridJsService {\n  constructor(pipe) {\n    this.pipe = pipe;\n    this._loading$ = new BehaviorSubject(true);\n    this._search$ = new Subject();\n    this._countries$ = new BehaviorSubject([]);\n    this._total$ = new BehaviorSubject(0);\n    this._state = {\n      page: 1,\n      pageSize: 5,\n      searchTerm: '',\n      startIndex: 0,\n      endIndex: 9,\n      totalRecords: 0\n    };\n    this._search$.pipe(tap(() => this._loading$.next(true)), debounceTime(200), switchMap(() => this._search()), delay(200), tap(() => this._loading$.next(false))).subscribe(result => {\n      this._countries$.next(result.countries);\n      this._total$.next(result.total);\n    });\n    this._search$.next();\n  }\n  get countries$() {\n    return this._countries$.asObservable();\n  }\n  get total$() {\n    return this._total$.asObservable();\n  }\n  get loading$() {\n    return this._loading$.asObservable();\n  }\n  get page() {\n    return this._state.page;\n  }\n  get pageSize() {\n    return this._state.pageSize;\n  }\n  get searchTerm() {\n    return this._state.searchTerm;\n  }\n  get startIndex() {\n    return this._state.startIndex;\n  }\n  get endIndex() {\n    return this._state.endIndex;\n  }\n  get totalRecords() {\n    return this._state.totalRecords;\n  }\n  set page(page) {\n    this._set({\n      page\n    });\n  }\n  set pageSize(pageSize) {\n    this._set({\n      pageSize\n    });\n  }\n  set searchTerm(searchTerm) {\n    this._set({\n      searchTerm\n    });\n  }\n  set startIndex(startIndex) {\n    this._set({\n      startIndex\n    });\n  }\n  set endIndex(endIndex) {\n    this._set({\n      endIndex\n    });\n  }\n  set totalRecords(totalRecords) {\n    this._set({\n      totalRecords\n    });\n  }\n  _set(patch) {\n    Object.assign(this._state, patch);\n    this._search$.next();\n  }\n  _search() {\n    const {\n      pageSize,\n      page,\n      searchTerm\n    } = this._state;\n    // 1. sort\n    let countries = GridJs;\n    // 2. filter\n    countries = countries.filter(country => matches(country, searchTerm, this.pipe));\n    const total = countries.length;\n    // 3. paginate\n    this.totalRecords = countries.length;\n    this._state.startIndex = (page - 1) * this.pageSize + 1;\n    this._state.endIndex = (page - 1) * this.pageSize + this.pageSize;\n    if (this.endIndex > this.totalRecords) {\n      this.endIndex = this.totalRecords;\n    }\n    countries = countries.slice(this._state.startIndex - 1, this._state.endIndex);\n    return of({\n      countries,\n      total\n    });\n  }\n  static {\n    this.Éµfac = function GridJsService_Factory(t) {\n      return new (t || GridJsService)(i0.ÉµÉµinject(i1.DecimalPipe));\n    };\n  }\n  static {\n    this.Éµprov = /*@__PURE__*/i0.ÉµÉµdefineInjectable({\n      token: GridJsService,\n      factory: GridJsService.Éµfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","of","Subject","debounceTime","delay","switchMap","tap","GridJs","compare","v1","v2","matches","country","term","pipe","id","toLowerCase","includes","name","email","position","company","GridJsService","constructor","_loading$","_search$","_countries$","_total$","_state","page","pageSize","searchTerm","startIndex","endIndex","totalRecords","next","_search","subscribe","result","countries","total","countries$","asObservable","total$","loading$","_set","patch","Object","assign","filter","length","slice","i0","ÉµÉµinject","i1","DecimalPipe","factory","Éµfac","providedIn"],"sources":["C:\\Users\\Socius\\Des